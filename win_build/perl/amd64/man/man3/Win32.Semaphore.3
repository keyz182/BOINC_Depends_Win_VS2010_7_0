.\" Automatically generated by Pod::Man 2.16 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Win32::Semaphore 3"
.TH Win32::Semaphore 3 "2008-04-23" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Win32::Semaphore \- Use Win32 semaphore objects from Perl
.SH "VERSION"
.IX Header "VERSION"
This document describes version 1.07 of Win32::Semaphore, released April 16, 2008 as part of Win32\-IPC version 1.07.
.SH "SYNOPSIS require Win32::Semaphore;"
.IX Header "SYNOPSIS require Win32::Semaphore;"
.Vb 2
\&        $sem = Win32::Semaphore\->new($initial,$maximum,$name);
\&        $sem\->wait;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module allows access to Win32 semaphore objects.  The \f(CW\*(C`wait\*(C'\fR
method and \f(CW\*(C`wait_all\*(C'\fR & \f(CW\*(C`wait_any\*(C'\fR functions are inherited from the
Win32::IPC module.
.Sh "Methods"
.IX Subsection "Methods"
.ie n .IP "$semaphore\fR = Win32::Semaphore\->new($initial, \f(CW$maximum, [$name])" 4
.el .IP "\f(CW$semaphore\fR = Win32::Semaphore\->new($initial, \f(CW$maximum\fR, [$name])" 4
.IX Item "$semaphore = Win32::Semaphore->new($initial, $maximum, [$name])"
Constructor for a new semaphore object.  \f(CW$initial\fR is the initial
count, and \f(CW$maximum\fR is the maximum count for the semaphore.  If
\&\f(CW$name\fR is omitted or \f(CW\*(C`undef\*(C'\fR, creates an unnamed semaphore object.
.Sp
If \f(CW$name\fR signifies an existing semaphore object, then \f(CW$initial\fR
and \f(CW$maximum\fR are ignored and the object is opened.  If this
happens, \f(CW$^E\fR will be set to 183 (\s-1ERROR_ALREADY_EXISTS\s0).
.ie n .IP "$semaphore = Win32::Semaphore\->open($name)" 4
.el .IP "\f(CW$semaphore\fR = Win32::Semaphore\->open($name)" 4
.IX Item "$semaphore = Win32::Semaphore->open($name)"
Constructor for opening an existing semaphore object.
.ie n .IP "$semaphore\->release([$increment, [$previous]])" 4
.el .IP "\f(CW$semaphore\fR\->release([$increment, [$previous]])" 4
.IX Item "$semaphore->release([$increment, [$previous]])"
Increment the count of \f(CW$semaphore\fR by \f(CW$increment\fR (default 1).
If \f(CW$increment\fR plus the semaphore's current count is more than its
maximum count, the count is not changed.  Returns true if the
increment is successful, or zero if it fails (additional error
information can be found in \f(CW$^E\fR).
.Sp
The semaphore's count (before incrementing) is stored in the second
argument (if any).
.Sp
It is not necessary to wait on a semaphore before calling \f(CW\*(C`release\*(C'\fR,
but you'd better know what you're doing.
.ie n .IP "$semaphore\->wait([$timeout])" 4
.el .IP "\f(CW$semaphore\fR\->wait([$timeout])" 4
.IX Item "$semaphore->wait([$timeout])"
Wait for \f(CW$semaphore\fR's count to be nonzero, then decrement it by 1.
See Win32::IPC.
.Sh "Deprecated Functions and Methods"
.IX Subsection "Deprecated Functions and Methods"
\&\fBWin32::Semaphore\fR still supports the ActiveWare syntax, but its use
is deprecated.
.IP "Win32::Semaphore::Create($SemObject,$Initial,$Max,$Name)" 4
.IX Item "Win32::Semaphore::Create($SemObject,$Initial,$Max,$Name)"
Use \f(CW\*(C`$SemObject = Win32::Semaphore\->new($Initial,$Max,$Name)\*(C'\fR instead.
.ie n .IP "Win32::Semaphore::Open($SemObject, $Name)" 4
.el .IP "Win32::Semaphore::Open($SemObject, \f(CW$Name\fR)" 4
.IX Item "Win32::Semaphore::Open($SemObject, $Name)"
Use \f(CW\*(C`$SemObject = Win32::Semaphore\->open($Name)\*(C'\fR instead.
.ie n .IP "$SemObj\->Release($Count,$LastVal)" 4
.el .IP "\f(CW$SemObj\fR\->Release($Count,$LastVal)" 4
.IX Item "$SemObj->Release($Count,$LastVal)"
Use \f(CW\*(C`$SemObj\->release($Count,$LastVal)\*(C'\fR instead.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
None.
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
Win32::Semaphore requires no configuration files or environment variables.
.PP
It runs under 32\-bit or 64\-bit Microsoft Windows, either natively or
under Cygwin.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
Win32::IPC
.SH "INCOMPATIBILITIES"
.IX Header "INCOMPATIBILITIES"
Prior to version 1.06, Win32::Semaphore treated \f(CW\*(C`undef\*(C'\fR values
differently.  In version 1.06 and later, passing \f(CW\*(C`undef\*(C'\fR as the value
of an optional parameter is the same as omitting that parameter.  In
previous versions, \f(CW\*(C`undef\*(C'\fR was interpreted as either the empty string
or 0 (along with a warning about \*(L"Use of uninitialized value...\*(R").
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
No bugs have been reported.
.SH "AUTHOR"
.IX Header "AUTHOR"
Christopher J. Madsen <\fIperl \s-1AT\s0 cjmweb.net\fR>
.PP
Please report any bugs or feature requests to
\&\f(CW\*(C`<bug\-Win32\-IPC\ AT\ rt.cpan.org>\*(C'\fR,
or through the web interface at
<http://rt.cpan.org/Public/Bug/Report.html?Queue=Win32\-IPC>
.PP
Loosely based on the original module by ActiveWare Internet Corp.,
<http://www.ActiveState.com>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 1998\-2008 Christopher J. Madsen
.PP
Created: 3 Feb 1998 from the ActiveWare version
  (c) 1995 Microsoft Corporation. All rights reserved.
      Developed by ActiveWare Internet Corp., http://www.ActiveState.com
.PP
.Vb 1
\&  Other modifications (c) 1997 by Gurusamy Sarathy <gsar@cpan.org>
.Ve
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself. See perlartistic.
.SH "DISCLAIMER OF WARRANTY"
.IX Header "DISCLAIMER OF WARRANTY"
\&\s-1BECAUSE\s0 \s-1THIS\s0 \s-1SOFTWARE\s0 \s-1IS\s0 \s-1LICENSED\s0 \s-1FREE\s0 \s-1OF\s0 \s-1CHARGE\s0, \s-1THERE\s0 \s-1IS\s0 \s-1NO\s0 \s-1WARRANTY\s0
\&\s-1FOR\s0 \s-1THE\s0 \s-1SOFTWARE\s0, \s-1TO\s0 \s-1THE\s0 \s-1EXTENT\s0 \s-1PERMITTED\s0 \s-1BY\s0 \s-1APPLICABLE\s0 \s-1LAW\s0. \s-1EXCEPT\s0 \s-1WHEN\s0
\&\s-1OTHERWISE\s0 \s-1STATED\s0 \s-1IN\s0 \s-1WRITING\s0 \s-1THE\s0 \s-1COPYRIGHT\s0 \s-1HOLDERS\s0 \s-1AND/OR\s0 \s-1OTHER\s0 \s-1PARTIES\s0
\&\s-1PROVIDE\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \*(L"\s-1AS\s0 \s-1IS\s0\*(R" \s-1WITHOUT\s0 \s-1WARRANTY\s0 \s-1OF\s0 \s-1ANY\s0 \s-1KIND\s0, \s-1EITHER\s0
\&\s-1EXPRESSED\s0 \s-1OR\s0 \s-1IMPLIED\s0, \s-1INCLUDING\s0, \s-1BUT\s0 \s-1NOT\s0 \s-1LIMITED\s0 \s-1TO\s0, \s-1THE\s0 \s-1IMPLIED\s0
\&\s-1WARRANTIES\s0 \s-1OF\s0 \s-1MERCHANTABILITY\s0 \s-1AND\s0 \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0. \s-1THE\s0
\&\s-1ENTIRE\s0 \s-1RISK\s0 \s-1AS\s0 \s-1TO\s0 \s-1THE\s0 \s-1QUALITY\s0 \s-1AND\s0 \s-1PERFORMANCE\s0 \s-1OF\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1IS\s0 \s-1WITH\s0
\&\s-1YOU\s0. \s-1SHOULD\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1PROVE\s0 \s-1DEFECTIVE\s0, \s-1YOU\s0 \s-1ASSUME\s0 \s-1THE\s0 \s-1COST\s0 \s-1OF\s0 \s-1ALL\s0
\&\s-1NECESSARY\s0 \s-1SERVICING\s0, \s-1REPAIR\s0, \s-1OR\s0 \s-1CORRECTION\s0.
.PP
\&\s-1IN\s0 \s-1NO\s0 \s-1EVENT\s0 \s-1UNLESS\s0 \s-1REQUIRED\s0 \s-1BY\s0 \s-1APPLICABLE\s0 \s-1LAW\s0 \s-1OR\s0 \s-1AGREED\s0 \s-1TO\s0 \s-1IN\s0 \s-1WRITING\s0
\&\s-1WILL\s0 \s-1ANY\s0 \s-1COPYRIGHT\s0 \s-1HOLDER\s0, \s-1OR\s0 \s-1ANY\s0 \s-1OTHER\s0 \s-1PARTY\s0 \s-1WHO\s0 \s-1MAY\s0 \s-1MODIFY\s0 \s-1AND/OR\s0
\&\s-1REDISTRIBUTE\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1AS\s0 \s-1PERMITTED\s0 \s-1BY\s0 \s-1THE\s0 \s-1ABOVE\s0 \s-1LICENSE\s0, \s-1BE\s0
\&\s-1LIABLE\s0 \s-1TO\s0 \s-1YOU\s0 \s-1FOR\s0 \s-1DAMAGES\s0, \s-1INCLUDING\s0 \s-1ANY\s0 \s-1GENERAL\s0, \s-1SPECIAL\s0, \s-1INCIDENTAL\s0,
\&\s-1OR\s0 \s-1CONSEQUENTIAL\s0 \s-1DAMAGES\s0 \s-1ARISING\s0 \s-1OUT\s0 \s-1OF\s0 \s-1THE\s0 \s-1USE\s0 \s-1OR\s0 \s-1INABILITY\s0 \s-1TO\s0 \s-1USE\s0
\&\s-1THE\s0 \s-1SOFTWARE\s0 (\s-1INCLUDING\s0 \s-1BUT\s0 \s-1NOT\s0 \s-1LIMITED\s0 \s-1TO\s0 \s-1LOSS\s0 \s-1OF\s0 \s-1DATA\s0 \s-1OR\s0 \s-1DATA\s0 \s-1BEING\s0
\&\s-1RENDERED\s0 \s-1INACCURATE\s0 \s-1OR\s0 \s-1LOSSES\s0 \s-1SUSTAINED\s0 \s-1BY\s0 \s-1YOU\s0 \s-1OR\s0 \s-1THIRD\s0 \s-1PARTIES\s0 \s-1OR\s0 A
\&\s-1FAILURE\s0 \s-1OF\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1TO\s0 \s-1OPERATE\s0 \s-1WITH\s0 \s-1ANY\s0 \s-1OTHER\s0 \s-1SOFTWARE\s0), \s-1EVEN\s0 \s-1IF\s0
\&\s-1SUCH\s0 \s-1HOLDER\s0 \s-1OR\s0 \s-1OTHER\s0 \s-1PARTY\s0 \s-1HAS\s0 \s-1BEEN\s0 \s-1ADVISED\s0 \s-1OF\s0 \s-1THE\s0 \s-1POSSIBILITY\s0 \s-1OF\s0
\&\s-1SUCH\s0 \s-1DAMAGES\s0.
